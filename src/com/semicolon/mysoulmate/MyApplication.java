package com.semicolon.mysoulmate;

import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.io.Storage;
import com.codename1.ui.Container;
import com.codename1.ui.Display;
import com.codename1.ui.FontImage;
import com.codename1.ui.Image;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.pofper.maps.entity.Point;
import com.semicolon.entity.Member;
import com.semicolon.entity.Photo;
import com.semicolon.gui.BlockListView;
import com.semicolon.gui.Conversationsgui;
import com.semicolon.gui.FeedbackView;
import com.semicolon.gui.InscriptionView;
import com.semicolon.gui.Login1;
import com.semicolon.gui.BlockListView;
import com.semicolon.gui.MatchingView;
import com.semicolon.gui.NewsfeedView;
import com.semicolon.gui.FeedbackView;
import com.semicolon.gui.InscriptionView;
import com.semicolon.gui.Listquestion;
import com.semicolon.gui.NewsfeedView;
import com.semicolon.gui.NotificationView;
import com.semicolon.gui.OtherProfileView;
import com.semicolon.gui.ProfileView;
import com.semicolon.gui.RecommandationsListView;
import com.semicolon.service.BlockService;
import com.semicolon.service.MemberService;
import java.util.Date;
import com.semicolon.service.FaceDetection;
import com.semicolon.service.PhotoService;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    public static Resources theme;
    public static int onlineId  ;
    public static Form firstForm;
    public static int MemberId ;
    private static MyApplication instance;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
	
        firstForm = new Login1().getContainer();

        firstForm.show();
        instance = this;
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

    public static void sideBar(Form form){
	Toolbar tb = form.getToolbar();
        Image icon = theme.getImage("icon.png");
        Container topBar = BorderLayout.east(new Label(icon));
        topBar.add(BorderLayout.SOUTH, new Label("MySoulmate", "SidemenuTagline"));
        topBar.setUIID("SideCommand");
        tb.addComponentToSideMenu(topBar);
        
	Photo profilePhoto = PhotoService.getInstance().getProfilePhoto(MemberId);
	Container memberContainer = new Container(BoxLayout.x());
	memberContainer.getAllStyles().setPaddingLeft(10);
	memberContainer.add(PhotoService.getInstance().EmakeImageViewer(profilePhoto.getPhotoUri().substring(16)));
	Member online = MemberService.getInstance().getMember(MemberId);
	Label onlineName = new Label(online.getFirstname() + " " + online.getLastname());
	onlineName.getAllStyles().setFgColor(0xffffff);
	memberContainer.add(onlineName);
	tb.addComponentToSideMenu(memberContainer);
	tb.addMaterialCommandToSideMenu("Newsfeed", FontImage.MATERIAL_LIST, e -> {
            new NewsfeedView().getForm().show();
        });
        tb.addMaterialCommandToSideMenu("Profile", FontImage.MATERIAL_ACCOUNT_CIRCLE, e -> {
            Form profileForm = (new ProfileView(form, MemberId)).getContainer();
            profileForm.show();
        });
        tb.addMaterialCommandToSideMenu("Conversations", FontImage.MATERIAL_MESSAGE, e -> {
           Conversationsgui cs = new Conversationsgui();
           cs.show();
//                Login1 login = new Login1();
//                login.show();


        });
	tb.addMaterialCommandToSideMenu("Matching", FontImage.MATERIAL_SEARCH, e -> {
            new MatchingView().getForm().show();
        });
        tb.addMaterialCommandToSideMenu("Notifications", FontImage.MATERIAL_NOTIFICATIONS, e -> {
            new NotificationView(firstForm, MemberId).getF().show();
        });
        tb.addMaterialCommandToSideMenu("Quiz", FontImage.MATERIAL_HELP, e -> {
            new Listquestion(firstForm, MemberId).getF().show();
        });
        tb.addMaterialCommandToSideMenu("Suggestions", FontImage.MATERIAL_LIST, e -> {
            Form recommandationListForm = (new RecommandationsListView(3000, 200, 200, form)).getContainer();
            recommandationListForm.show();
        });
        tb.addMaterialCommandToSideMenu("Add Feedback", FontImage.MATERIAL_FEEDBACK, e -> {
            new FeedbackView(firstForm).getF().show();
        });
        tb.addMaterialCommandToSideMenu("Blocks", FontImage.MATERIAL_BLOCK, e -> {
            (new BlockListView(form, MemberId)).getForm().show();
        });
        tb.addMaterialCommandToSideMenu("Logout", FontImage.MATERIAL_EXIT_TO_APP, e -> {
            Member m = MemberService.getInstance().getMember(onlineId);
            m.setConnected(false);
            m.setLastLogin(new Date());
             onlineId =0;
            MemberId = 0;
            instance.stop();
            Display.getInstance().exitApplication();

        });
    }
}
